{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\Desktop\\\\FinalRedes\\\\client\\\\src\\\\components\\\\utils\\\\custom\\\\Timer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Timer = _ref => {\n  _s();\n  let {\n    horaInicio\n  } = _ref;\n  const red = \"#e61919\";\n  const yellow = \"#ffff00\";\n  const green = \"#0d730d\";\n  const horaFin = new Date(); // Hora de finalización (hora actual)\n  horaFin.toLocaleTimeString(horaInicio.getHours(), horaInicio.getMinutes(), horaInicio.getSeconds + 4);\n  const diferenciaEnMilisegundos = horaFin.getTime() - horaInicio.getTime(); // Diferencia en milisegundos\n  const [segundos, setSegundos] = useState(Math.floor(diferenciaEnMilisegundos / 1000 % 60)); //Diferencia en segundos\n  const [minutos, setMinutos] = useState(Math.floor(diferenciaEnMilisegundos / 1000 / 60 % 60)); // Diferencia en minutos\n  const [horas, setHoras] = useState(Math.floor(diferenciaEnMilisegundos / 1000 / 60 / 60)); // Diferencia en horas\n  const [porcentaje, setPorcentaje] = useState(0);\n  const [color, setColor] = useState(green);\n  const segundosRef = useRef(segundos);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (segundosRef.current === 0) {\n        if (minutos === 0) {\n          if (horas === 0) {\n            clearInterval(intervalId);\n          } else {\n            setHoras(horas - 1);\n          }\n          setMinutos(59);\n        } else {\n          setMinutos(minutos - 1);\n        }\n        segundosRef.current = 59;\n      } else {\n        segundosRef.current = segundosRef.current - 1;\n      }\n      setSegundos(segundosRef.current);\n      const tiempoTotal = (horaFin.getHours() - horaInicio.getHours()) * 3600 + (horaFin.getMinutes() - horaInicio.getMinutes()) * 60 + horaFin.getSeconds() - horaInicio.getSeconds();\n      const tiempoRestante = horas * 3600 + minutos * 60 + segundos;\n      const porcentaje = 100 - (tiempoTotal - tiempoRestante) / tiempoTotal * 100;\n      console.log(tiempoTotal, tiempoRestante, porcentaje, horaFin);\n      setColor(porcentaje < 5 ? red : porcentaje > 5 && porcentaje < 30 ? yellow : green);\n      setPorcentaje(porcentaje);\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, [diferenciaEnMilisegundos, horaFin, horaFin.getHours, horaFin.getMinutes, horaFin.getSeconds, horaInicio, horas, minutos, segundos, setSegundos]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: 150,\n      height: 150\n    },\n    children: /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n      value: porcentaje,\n      text: horas + \":\" + minutos + \":\" + segundos,\n      styles: buildStyles({\n        textColor: \"#000000\",\n        pathColor: color,\n        tailColor: \"rgba(255,255,255,.2)\"\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(Timer, \"0r1oQDN+U4cLEfZRorPEZNcRGF8=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useEffect","useState","useRef","CircularProgressbar","buildStyles","jsxDEV","_jsxDEV","Timer","_ref","_s","horaInicio","red","yellow","green","horaFin","Date","toLocaleTimeString","getHours","getMinutes","getSeconds","diferenciaEnMilisegundos","getTime","segundos","setSegundos","Math","floor","minutos","setMinutos","horas","setHoras","porcentaje","setPorcentaje","color","setColor","segundosRef","intervalId","setInterval","current","clearInterval","tiempoTotal","tiempoRestante","console","log","style","width","height","children","value","text","styles","textColor","pathColor","tailColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/asus/Desktop/FinalRedes/client/src/components/utils/custom/Timer.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\n\r\nconst Timer = ({ horaInicio }) => {\r\n  const red = \"#e61919\";\r\n  const yellow = \"#ffff00\";\r\n  const green = \"#0d730d\";\r\n  const horaFin = new Date(); // Hora de finalización (hora actual)\r\n  horaFin.toLocaleTimeString(\r\n    horaInicio.getHours(),\r\n    horaInicio.getMinutes(),\r\n    horaInicio.getSeconds + 4\r\n  );\r\n\r\n  const diferenciaEnMilisegundos = horaFin.getTime() - horaInicio.getTime(); // Diferencia en milisegundos\r\n  const [segundos, setSegundos] = useState(\r\n    Math.floor((diferenciaEnMilisegundos / 1000) % 60)\r\n  ); //Diferencia en segundos\r\n  const [minutos, setMinutos] = useState(\r\n    Math.floor((diferenciaEnMilisegundos / 1000 / 60) % 60)\r\n  ); // Diferencia en minutos\r\n  const [horas, setHoras] = useState(\r\n    Math.floor(diferenciaEnMilisegundos / 1000 / 60 / 60)\r\n  ); // Diferencia en horas\r\n  const [porcentaje, setPorcentaje] = useState(0);\r\n  const [color, setColor] = useState(green);\r\n\r\n  const segundosRef = useRef(segundos);\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      if (segundosRef.current === 0) {\r\n        if (minutos === 0) {\r\n          if (horas === 0) {\r\n            clearInterval(intervalId);\r\n          } else {\r\n            setHoras(horas - 1);\r\n          }\r\n          setMinutos(59);\r\n        } else {\r\n          setMinutos(minutos - 1);\r\n        }\r\n        segundosRef.current = 59;\r\n      } else {\r\n        segundosRef.current = segundosRef.current - 1;\r\n      }\r\n      setSegundos(segundosRef.current);\r\n\r\n      const tiempoTotal =\r\n        (horaFin.getHours() - horaInicio.getHours()) * 3600 +\r\n        (horaFin.getMinutes() - horaInicio.getMinutes()) * 60 +\r\n        horaFin.getSeconds() -\r\n        horaInicio.getSeconds();\r\n      const tiempoRestante = horas * 3600 + minutos * 60 + segundos;\r\n      const porcentaje =\r\n        100 - ((tiempoTotal - tiempoRestante) / tiempoTotal) * 100;\r\n      console.log(tiempoTotal, tiempoRestante, porcentaje, horaFin);\r\n      setColor(\r\n        porcentaje < 5\r\n          ? red\r\n          : porcentaje > 5 && porcentaje < 30\r\n          ? yellow\r\n          : green\r\n      );\r\n      setPorcentaje(porcentaje);\r\n    }, 1000);\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, [\r\n    diferenciaEnMilisegundos,\r\n    horaFin,\r\n    horaFin.getHours,\r\n    horaFin.getMinutes,\r\n    horaFin.getSeconds,\r\n    horaInicio,\r\n    horas,\r\n    minutos,\r\n    segundos,\r\n    setSegundos,\r\n  ]);\r\n\r\n  return (\r\n    <div style={{ width: 150, height: 150 }}>\r\n      <CircularProgressbar\r\n        value={porcentaje}\r\n        text={horas + \":\" + minutos + \":\" + segundos}\r\n        styles={buildStyles({\r\n          textColor: \"#000000\",\r\n          pathColor: color,\r\n          tailColor: \"rgba(255,255,255,.2)\",\r\n        })}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}