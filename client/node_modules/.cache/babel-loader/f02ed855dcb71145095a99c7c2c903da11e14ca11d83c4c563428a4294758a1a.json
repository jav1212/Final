{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\Desktop\\\\FinalRedes\\\\client\\\\src\\\\components\\\\utils\\\\custom\\\\PaginationButtons.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport PageButton from \"./PageButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaginationButtons = _ref => {\n  _s();\n  let {\n    totalPages,\n    activePage,\n    setActivePage\n  } = _ref;\n  const [activeButton, setActiveButton] = useState(activePage);\n  const handleNext = () => {\n    if (activePage < Math.max(...totalPages)) {\n      setActivePage(activePage + 1);\n    }\n  };\n  const handleClick = e => {\n    setActivePage(e.target.id);\n  };\n  const handlePrev = () => {\n    if (activePage > 1) {\n      setActivePage(activePage - 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" flex justify-center items-center absolute bottom-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" flex\",\n      children: [/*#__PURE__*/_jsxDEV(PageButton, {\n        text: \"← Prev\",\n        details: \"rounded-l-md mr-1\",\n        id: \"prev\",\n        handle: handlePrev\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), totalPages.map((total, index) => {\n        console.log(activePage, total);\n        return /*#__PURE__*/_jsxDEV(PageButton, {\n          text: total,\n          details: activePage === total ? \"bg-azulgris\" : \"\",\n          id: total,\n          handle: handleClick\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(PageButton, {\n        text: \"Next →\",\n        details: \"rounded-r-md ml-1\",\n        id: \"next\",\n        handle: handleNext\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(PaginationButtons, \"KA+Mtfog083Lf0cCvxVfuYVz6rQ=\");\n_c = PaginationButtons;\nexport default PaginationButtons;\nvar _c;\n$RefreshReg$(_c, \"PaginationButtons\");","map":{"version":3,"names":["React","useState","PageButton","jsxDEV","_jsxDEV","PaginationButtons","_ref","_s","totalPages","activePage","setActivePage","activeButton","setActiveButton","handleNext","Math","max","handleClick","e","target","id","handlePrev","className","children","text","details","handle","fileName","_jsxFileName","lineNumber","columnNumber","map","total","index","console","log","_c","$RefreshReg$"],"sources":["C:/Users/asus/Desktop/FinalRedes/client/src/components/utils/custom/PaginationButtons.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport PageButton from \"./PageButton\";\r\n\r\nconst PaginationButtons = ({ totalPages, activePage, setActivePage }) => {\r\n  const [activeButton, setActiveButton] = useState(activePage);\r\n  const handleNext = () => {\r\n    if (activePage < Math.max(...totalPages)) {\r\n      setActivePage(activePage + 1);\r\n    }\r\n  };\r\n\r\n  const handleClick = (e) => {\r\n    setActivePage(e.target.id);\r\n  };\r\n\r\n  const handlePrev = () => {\r\n    if (activePage > 1) {\r\n      setActivePage(activePage - 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\" flex justify-center items-center absolute bottom-5\">\r\n      <div className=\" flex\">\r\n        <PageButton\r\n          text={\"← Prev\"}\r\n          details=\"rounded-l-md mr-1\"\r\n          id=\"prev\"\r\n          handle={handlePrev}\r\n        />\r\n        {totalPages.map((total, index) => {\r\n          console.log(activePage, total);\r\n          return (\r\n            <PageButton\r\n              key={index}\r\n              text={total}\r\n              details={activePage === total ? \"bg-azulgris\" : \"\"}\r\n              id={total}\r\n              handle={handleClick}\r\n            />\r\n          );\r\n        })}\r\n        <PageButton\r\n          text={\"Next →\"}\r\n          details=\"rounded-r-md ml-1\"\r\n          id=\"next\"\r\n          handle={handleNext}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaginationButtons;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,iBAAiB,GAAGC,IAAA,IAA+C;EAAAC,EAAA;EAAA,IAA9C;IAAEC,UAAU;IAAEC,UAAU;IAAEC;EAAc,CAAC,GAAAJ,IAAA;EAClE,MAAM,CAACK,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAACQ,UAAU,CAAC;EAC5D,MAAMI,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIJ,UAAU,GAAGK,IAAI,CAACC,GAAG,CAAC,GAAGP,UAAU,CAAC,EAAE;MACxCE,aAAa,CAACD,UAAU,GAAG,CAAC,CAAC;IAC/B;EACF,CAAC;EAED,MAAMO,WAAW,GAAIC,CAAC,IAAK;IACzBP,aAAa,CAACO,CAAC,CAACC,MAAM,CAACC,EAAE,CAAC;EAC5B,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIX,UAAU,GAAG,CAAC,EAAE;MAClBC,aAAa,CAACD,UAAU,GAAG,CAAC,CAAC;IAC/B;EACF,CAAC;EAED,oBACEL,OAAA;IAAKiB,SAAS,EAAC,qDAAqD;IAAAC,QAAA,eAClElB,OAAA;MAAKiB,SAAS,EAAC,OAAO;MAAAC,QAAA,gBACpBlB,OAAA,CAACF,UAAU;QACTqB,IAAI,EAAE,QAAS;QACfC,OAAO,EAAC,mBAAmB;QAC3BL,EAAE,EAAC,MAAM;QACTM,MAAM,EAAEL;MAAW;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC,EACDrB,UAAU,CAACsB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;QAChCC,OAAO,CAACC,GAAG,CAACzB,UAAU,EAAEsB,KAAK,CAAC;QAC9B,oBACE3B,OAAA,CAACF,UAAU;UAETqB,IAAI,EAAEQ,KAAM;UACZP,OAAO,EAAEf,UAAU,KAAKsB,KAAK,GAAG,aAAa,GAAG,EAAG;UACnDZ,EAAE,EAAEY,KAAM;UACVN,MAAM,EAAET;QAAY,GAJfgB,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKX,CAAC;MAEN,CAAC,CAAC,eACFzB,OAAA,CAACF,UAAU;QACTqB,IAAI,EAAE,QAAS;QACfC,OAAO,EAAC,mBAAmB;QAC3BL,EAAE,EAAC,MAAM;QACTM,MAAM,EAAEZ;MAAW;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtB,EAAA,CAhDIF,iBAAiB;AAAA8B,EAAA,GAAjB9B,iBAAiB;AAkDvB,eAAeA,iBAAiB;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}